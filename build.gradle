import java.time.LocalDate
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "io.freefair.gradle:lombok-plugin:5.3.3.3"
  }
}

plugins {
    id 'com.bmuschko.docker-remote-api' version '3.2.3'
}

def commit = 'UNKNOWN'

try {
	commit = 'git rev-parse HEAD'.execute().text.trim().substring(0, 7)
} catch (exception) {
	println("Could not determine commit SHA")
}

println("HEAD: " + commit)

version = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy.MM.dd-HH.mm.ss")) + "-" + commit

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'io.freefair.lombok'

repositories {
	flatDir {
		dirs 'deps'
	}
	mavenCentral()
}

dependencies {
	compile name: 'commons-io-2.4'
	compile name: 'guava-17.0'
	compile name: 'gson-2.8.0'
	compile name: 'asm-debug-all-5.2'
	compile 'org.slf4j:slf4j-api:2.0.7'
	compile 'ch.qos.logback:logback-classic:1.3.6'
	compile 'net.dv8tion:JDA:5.0.0-beta.24'
}

compileJava {
	outputs.upToDateWhen { false }
	options.compilerArgs << '-XDignore.symbol.file'
	options.fork = true
	options.forkOptions.executable = 'javac'
}

jar {
	classifier = 'bin'
	baseName = archivesBaseName
}

task fatJar(type: Jar, dependsOn: 'jar') {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    inputs.file jar.archivePath
    from(configurations.compile.collect { zipTree(it).matching { 
		exclude "META-INF/**"
	} })
	
	from("${projectDir}/services") {
		into "META-INF/services"
	}
    
	classifier = 'all'
	baseName = archivesBaseName
}

tasks.withType(Jar) {
	doFirst {
		manifest {
			attributes([
				"Main-Class": "com.aizistral.tox1cozz.Main",
				"Implementation-Version": version
			])
		}
	}
}

fatJar.doFirst {
    from zipTree(jar.archivePath)
}

artifacts {
    archives fatJar
}
